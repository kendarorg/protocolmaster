package org.kendar.mongo.dtos;

import static org.kendar.mongo.dtos.MongoCommandType.*;

public enum MongoCommands {
    aggregate(ucAggregation),
    count(ucAggregation),
    distinct(ucAggregation),
    mapReduce(ucAggregation),
    geoSearch(ucGeospatial),
    delete(ucQueryAndWrite),
    find(ucQueryAndWrite),
    findAndModify(ucQueryAndWrite),
    getMore(ucQueryAndWrite),
    insert(ucQueryAndWrite),
    resetError(ucQueryAndWrite),
    update(ucQueryAndWrite),
    planCacheClear(ucQueryPlanCache),
    planCacheClearFilters(ucQueryPlanCache),
    planCacheListFilters(ucQueryPlanCache),
    planCacheSetFilters(ucQueryPlanCache),
    authenticate(doAuth),
    logout(doAuth),
    createUser(doUserManagement),
    dropUser(doUserManagement),
    grantRolesToUser(doUserManagement),
    revokeRolesFromUser(doUserManagement),
    updateUser(doUserManagement),
    usersInfo(doUserManagement),
    createRole(doRoleManagement),
    dropRole(doRoleManagement),
    dropAllRolesFromDatabase(doRoleManagement),
    grantPrivilegesToRole(doRoleManagement),
    grantRolesToRole(doRoleManagement),
    invalidateUserCache(doRoleManagement),
    revokePrivilegesFromRole(doRoleManagement),
    revokeRolesFromRole(doRoleManagement),
    rolesInfo(doRoleManagement),
    updateRole(doRoleManagement),
    applyOps(doReplication),
    hello(doReplication),
    replSetAbortPrimaryCatchUp(doReplication),
    replSetFreeze(doReplication),
    replSetGetConfig(doReplication),
    replSetGetStatus(doReplication),
    replSetInitiate(doReplication),
    replSetMaintenance(doReplication),
    replSetReconfig(doReplication),
    replSetResizeOplog(doReplication),
    replSetStepDown(doReplication),
    replSetSyncFrom(doReplication),
    abortReshardCollection(doSharding),
    addShard(doSharding),
    addShardToZone(doSharding),
    analyzeShardKey(doSharding),
    balancerCollectionStatus(doSharding),
    balancerStart(doSharding),
    balancerStatus(doSharding),
    balancerStop(doSharding),
    checkMetadataConsistency(doSharding),
    checkShardingIndex(doSharding),
    clearJumboFlag(doSharding),
    cleanupOrphaned(doSharding),
    cleanupReshardCollection(doSharding),
    commitReshardCollection(doSharding),
    configureCollectionBalancing(doSharding),
    configureQueryAnalyzer(doSharding),
    enableSharding(doSharding),
    flushRouterConfig(doSharding),
    getShardMap(doSharding),
    getShardVersion(doSharding),
    isdbgrid(doSharding),
    listShards(doSharding),
    moveChunk(doSharding),
    movePrimary(doSharding),
    moveRange(doSharding),
    mergeChunks(doSharding),
    refineCollectionShardKey(doSharding),
    removeShard(doSharding),
    removeShardFromZone(doSharding),
    reshardCollection(doSharding),
    setShardVersion(doSharding),
    shardCollection(doSharding),
    shardingState(doSharding),
    split(doSharding),
    splitVector(doSharding),
    unsetSharding(doSharding),
    updateZoneKeyRange(doSharding),
    abortTransaction(doSession),
    commitTransaction(doSession),
    endSessions(doSession),
    killAllSessions(doSession),
    killAllSessionsByPattern(doSession),
    killSessions(doSession),
    refreshSessions(doSession),
    startSession(doSession),
    cloneCollectionAsCapped(doAdmin),
    collMod(doAdmin),
    compact(doAdmin),
    compactStructuredEncryptionData(doAdmin),
    convertToCapped(doAdmin),
    create(doAdmin),
    currentOp(doAdmin),
    drop(doAdmin),
    dropDatabase(doAdmin),
    dropConnections(doAdmin),
    dropIndexes(doAdmin),
    filemd5(doAdmin),
    fsync(doAdmin),
    fsyncUnlock(doAdmin),
    getDefaultRWConcern(doAdmin),
    getClusterParameter(doAdmin),
    getParameter(doAdmin),
    killCursors(doAdmin),
    killOp(doAdmin),
    listCollections(doAdmin),
    listDatabases(doAdmin),
    listIndexes(doAdmin),
    logRotate(doAdmin),
    reIndex(doAdmin),
    renameCollection(doAdmin),
    rotateCertificates(doAdmin),
    setFeatureCompatibilityVersion(doAdmin),
    setIndexCommitQuorum(doAdmin),
    setClusterParameter(doAdmin),
    setParameter(doAdmin),
    setDefaultRWConcern(doAdmin),
    shutdown(doAdmin),
    buildInfo(doDiagnostic),
    collStats(doDiagnostic),
    connPoolStats(doDiagnostic),
    connectionStatus(doDiagnostic),
    dataSize(doDiagnostic),
    dbHash(doDiagnostic),
    dbStats(doDiagnostic),
    driverOIDTest(doDiagnostic),
    explain(doDiagnostic),
    features(doDiagnostic),
    getCmdLineOpts(doDiagnostic),
    getLog(doDiagnostic),
    hostInfo(doDiagnostic),
    _isSelf(doDiagnostic),
    listCommands(doDiagnostic),
    lockInfo(doDiagnostic),
    netstat(doDiagnostic),
    ping(doDiagnostic),
    profile(doDiagnostic),
    serverStatus(doDiagnostic),
    shardConnPoolStats(doDiagnostic),
    top(doDiagnostic),
    validate(doDiagnostic),
    whatsmyuri(doDiagnostic),
    logApplicationMessage(auditing),
    createSearchIndexes(atlasSearch),
    dropSearchIndex(atlasSearch),
    updateSearchIndex(atlasSearch);


    private final MongoCommandType type;

    MongoCommands(MongoCommandType mongoCommandType) {
        type = mongoCommandType;
    }

    public MongoCommandType getType() {
        return type;
    }
}
